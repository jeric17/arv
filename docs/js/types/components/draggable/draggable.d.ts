import { EventEmitter } from '../../stencil-public-runtime';
export declare class Draggable {
    el: HTMLElement;
    isOver: boolean;
    isTopOver: boolean;
    isBottomOver: boolean;
    hashKey: string;
    showIcon: boolean;
    color: string;
    drag: (evt: DragEvent, key: string) => void;
    over: (evt: DragEvent, key: string) => void;
    start: (evt: DragEvent, key: string) => void;
    enter: (evt: DragEvent, key: string) => void;
    leave: (evt: DragEvent, key: string) => void;
    end: (evt: DragEvent, key: string) => void;
    exit: (evt: DragEvent, key: string) => void;
    drop: (evt: DragEvent, k1: string, k2: string) => void;
    dropTop: (evt: DragEvent, k1: string, k2: string) => void;
    dropBottom: (evt: DragEvent, k1: string, k2: string) => void;
    dropLeft: (evt: DragEvent, k1: string, k2: string) => void;
    dropRight: (evt: DragEvent, k1: string, k2: string) => void;
    disabled: boolean;
    isLast: boolean;
    direction: 'vertical' | 'horizontal';
    itemDrag: EventEmitter;
    itemDrop: EventEmitter;
    itemStart: EventEmitter;
    itemOver: EventEmitter;
    itemEnter: EventEmitter;
    itemEnd: EventEmitter;
    itemExit: EventEmitter;
    itemLeave: EventEmitter;
    itemDropTop: EventEmitter;
    itemDropBottom: EventEmitter;
    itemDropLeft: EventEmitter;
    itemDropRight: EventEmitter;
    applyEvent(evt: DragEvent, propName: string, eventName: string, options?: {}): void;
    onDragOver: (evt: DragEvent) => void;
    onDragStart: (evt: DragEvent) => void;
    onDragEnter: (evt: DragEvent) => void;
    onDragLeave: (evt: DragEvent) => void;
    onDragEnd: (evt: DragEvent) => void;
    onDragExit: (evt: DragEvent) => void;
    onDrag: (evt: DragEvent) => void;
    onDrop: (evt: DragEvent) => void;
    onDragTop: () => boolean;
    onDragLeaveTop: () => void;
    onDropTop: (evt: DragEvent) => void;
    onDragBottom: () => boolean;
    onDragLeaveBottom: () => void;
    onDropBottom: (evt: DragEvent) => void;
    render(): any;
}
