/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface ArvAvatar {
      'alt': string;
      'imgSrc': string;
      'size': string;
    }

    interface ArvButton {
      'color': string;
      'disabled': boolean;
      'full': boolean;
      'icon': string;
      'onButtonClick': (e: Event) => void;
      'size': string;
      'type': string;
      'variant': string;
    }

    interface ArvCardHeader {
      'action': any;
      'avatarImage': string;
      'color': string;
      'subHeader': string;
      'titleHeader': string;
    }

    interface ArvCardMedia {
      'imageSrc': string;
    }

    interface ArvCard {

    }

    interface ArvDialogPortal {
      'content': any;
    }

    interface ArvDialog {
      'handleClose': () => void;
      'parent': HTMLElement;
      'show': boolean;
    }

    interface ArvFlex {
      'content': string;
      'items': string;
      'justify': string;
      'layout': string;
      'order': number;
      'wrap': string;
    }

    interface ArvHeader {
      'color': string;
      'position': string;
    }

    interface ArvIcon {
      'icon': string;
      'size': string;
    }

    interface ArvInput {
      'disabled': boolean;
      'label': string;
      'layout': string;
      'name': string;
      'onInputChange': (e: Event) => void;
      'required': boolean;
      'type': string;
      'value': string;
    }

    interface ArvList {
      'color': string;
    }

    interface ArvText {
      'variant': string;
    }

    interface BbBolts {
      'items': any[];
    }

    interface MyComponent {

    }
  }


    interface HTMLArvAvatarElement extends StencilComponents.ArvAvatar, HTMLStencilElement {}

    var HTMLArvAvatarElement: {
      prototype: HTMLArvAvatarElement;
      new (): HTMLArvAvatarElement;
    };
    

    interface HTMLArvButtonElement extends StencilComponents.ArvButton, HTMLStencilElement {}

    var HTMLArvButtonElement: {
      prototype: HTMLArvButtonElement;
      new (): HTMLArvButtonElement;
    };
    

    interface HTMLArvCardHeaderElement extends StencilComponents.ArvCardHeader, HTMLStencilElement {}

    var HTMLArvCardHeaderElement: {
      prototype: HTMLArvCardHeaderElement;
      new (): HTMLArvCardHeaderElement;
    };
    

    interface HTMLArvCardMediaElement extends StencilComponents.ArvCardMedia, HTMLStencilElement {}

    var HTMLArvCardMediaElement: {
      prototype: HTMLArvCardMediaElement;
      new (): HTMLArvCardMediaElement;
    };
    

    interface HTMLArvCardElement extends StencilComponents.ArvCard, HTMLStencilElement {}

    var HTMLArvCardElement: {
      prototype: HTMLArvCardElement;
      new (): HTMLArvCardElement;
    };
    

    interface HTMLArvDialogPortalElement extends StencilComponents.ArvDialogPortal, HTMLStencilElement {}

    var HTMLArvDialogPortalElement: {
      prototype: HTMLArvDialogPortalElement;
      new (): HTMLArvDialogPortalElement;
    };
    

    interface HTMLArvDialogElement extends StencilComponents.ArvDialog, HTMLStencilElement {}

    var HTMLArvDialogElement: {
      prototype: HTMLArvDialogElement;
      new (): HTMLArvDialogElement;
    };
    

    interface HTMLArvFlexElement extends StencilComponents.ArvFlex, HTMLStencilElement {}

    var HTMLArvFlexElement: {
      prototype: HTMLArvFlexElement;
      new (): HTMLArvFlexElement;
    };
    

    interface HTMLArvHeaderElement extends StencilComponents.ArvHeader, HTMLStencilElement {}

    var HTMLArvHeaderElement: {
      prototype: HTMLArvHeaderElement;
      new (): HTMLArvHeaderElement;
    };
    

    interface HTMLArvIconElement extends StencilComponents.ArvIcon, HTMLStencilElement {}

    var HTMLArvIconElement: {
      prototype: HTMLArvIconElement;
      new (): HTMLArvIconElement;
    };
    

    interface HTMLArvInputElement extends StencilComponents.ArvInput, HTMLStencilElement {}

    var HTMLArvInputElement: {
      prototype: HTMLArvInputElement;
      new (): HTMLArvInputElement;
    };
    

    interface HTMLArvListElement extends StencilComponents.ArvList, HTMLStencilElement {}

    var HTMLArvListElement: {
      prototype: HTMLArvListElement;
      new (): HTMLArvListElement;
    };
    

    interface HTMLArvTextElement extends StencilComponents.ArvText, HTMLStencilElement {}

    var HTMLArvTextElement: {
      prototype: HTMLArvTextElement;
      new (): HTMLArvTextElement;
    };
    

    interface HTMLBbBoltsElement extends StencilComponents.BbBolts, HTMLStencilElement {}

    var HTMLBbBoltsElement: {
      prototype: HTMLBbBoltsElement;
      new (): HTMLBbBoltsElement;
    };
    

    interface HTMLMyComponentElement extends StencilComponents.MyComponent, HTMLStencilElement {}

    var HTMLMyComponentElement: {
      prototype: HTMLMyComponentElement;
      new (): HTMLMyComponentElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'arv-avatar': JSXElements.ArvAvatarAttributes;
    'arv-button': JSXElements.ArvButtonAttributes;
    'arv-card-header': JSXElements.ArvCardHeaderAttributes;
    'arv-card-media': JSXElements.ArvCardMediaAttributes;
    'arv-card': JSXElements.ArvCardAttributes;
    'arv-dialog-portal': JSXElements.ArvDialogPortalAttributes;
    'arv-dialog': JSXElements.ArvDialogAttributes;
    'arv-flex': JSXElements.ArvFlexAttributes;
    'arv-header': JSXElements.ArvHeaderAttributes;
    'arv-icon': JSXElements.ArvIconAttributes;
    'arv-input': JSXElements.ArvInputAttributes;
    'arv-list': JSXElements.ArvListAttributes;
    'arv-text': JSXElements.ArvTextAttributes;
    'bb-bolts': JSXElements.BbBoltsAttributes;
    'my-component': JSXElements.MyComponentAttributes;
    }
  }

  namespace JSXElements {

    export interface ArvAvatarAttributes extends HTMLAttributes {
      'alt'?: string;
      'imgSrc'?: string;
      'size'?: string;
    }

    export interface ArvButtonAttributes extends HTMLAttributes {
      'color'?: string;
      'disabled'?: boolean;
      'full'?: boolean;
      'icon'?: string;
      'onButtonClick'?: (e: Event) => void;
      'size'?: string;
      'type'?: string;
      'variant'?: string;
    }

    export interface ArvCardHeaderAttributes extends HTMLAttributes {
      'action'?: any;
      'avatarImage'?: string;
      'color'?: string;
      'subHeader'?: string;
      'titleHeader'?: string;
    }

    export interface ArvCardMediaAttributes extends HTMLAttributes {
      'imageSrc'?: string;
    }

    export interface ArvCardAttributes extends HTMLAttributes {

    }

    export interface ArvDialogPortalAttributes extends HTMLAttributes {
      'content'?: any;
    }

    export interface ArvDialogAttributes extends HTMLAttributes {
      'handleClose'?: () => void;
      'parent'?: HTMLElement;
      'show'?: boolean;
    }

    export interface ArvFlexAttributes extends HTMLAttributes {
      'content'?: string;
      'items'?: string;
      'justify'?: string;
      'layout'?: string;
      'order'?: number;
      'wrap'?: string;
    }

    export interface ArvHeaderAttributes extends HTMLAttributes {
      'color'?: string;
      'position'?: string;
    }

    export interface ArvIconAttributes extends HTMLAttributes {
      'icon'?: string;
      'size'?: string;
    }

    export interface ArvInputAttributes extends HTMLAttributes {
      'disabled'?: boolean;
      'label'?: string;
      'layout'?: string;
      'name'?: string;
      'onInputChange'?: (e: Event) => void;
      'required'?: boolean;
      'type'?: string;
      'value'?: string;
    }

    export interface ArvListAttributes extends HTMLAttributes {
      'color'?: string;
    }

    export interface ArvTextAttributes extends HTMLAttributes {
      'variant'?: string;
    }

    export interface BbBoltsAttributes extends HTMLAttributes {
      'items'?: any[];
    }

    export interface MyComponentAttributes extends HTMLAttributes {

    }
  }

  interface HTMLElementTagNameMap {
    'arv-avatar': HTMLArvAvatarElement
    'arv-button': HTMLArvButtonElement
    'arv-card-header': HTMLArvCardHeaderElement
    'arv-card-media': HTMLArvCardMediaElement
    'arv-card': HTMLArvCardElement
    'arv-dialog-portal': HTMLArvDialogPortalElement
    'arv-dialog': HTMLArvDialogElement
    'arv-flex': HTMLArvFlexElement
    'arv-header': HTMLArvHeaderElement
    'arv-icon': HTMLArvIconElement
    'arv-input': HTMLArvInputElement
    'arv-list': HTMLArvListElement
    'arv-text': HTMLArvTextElement
    'bb-bolts': HTMLBbBoltsElement
    'my-component': HTMLMyComponentElement
  }

  interface ElementTagNameMap {
    'arv-avatar': HTMLArvAvatarElement;
    'arv-button': HTMLArvButtonElement;
    'arv-card-header': HTMLArvCardHeaderElement;
    'arv-card-media': HTMLArvCardMediaElement;
    'arv-card': HTMLArvCardElement;
    'arv-dialog-portal': HTMLArvDialogPortalElement;
    'arv-dialog': HTMLArvDialogElement;
    'arv-flex': HTMLArvFlexElement;
    'arv-header': HTMLArvHeaderElement;
    'arv-icon': HTMLArvIconElement;
    'arv-input': HTMLArvInputElement;
    'arv-list': HTMLArvListElement;
    'arv-text': HTMLArvTextElement;
    'bb-bolts': HTMLBbBoltsElement;
    'my-component': HTMLMyComponentElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;