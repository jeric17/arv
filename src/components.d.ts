/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface ArvFlex {
      'content': string;
      'items': string;
      'justify': string;
      'layout': string;
      'order': number;
      'wrap': string;
    }

    interface MyComponent {
      'first': string;
      'last': string;
    }
  }


    interface HTMLArvFlexElement extends StencilComponents.ArvFlex, HTMLStencilElement {}

    var HTMLArvFlexElement: {
      prototype: HTMLArvFlexElement;
      new (): HTMLArvFlexElement;
    };
    

    interface HTMLMyComponentElement extends StencilComponents.MyComponent, HTMLStencilElement {}

    var HTMLMyComponentElement: {
      prototype: HTMLMyComponentElement;
      new (): HTMLMyComponentElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'arv-flex': JSXElements.ArvFlexAttributes;
    'my-component': JSXElements.MyComponentAttributes;
    }
  }

  namespace JSXElements {

    export interface ArvFlexAttributes extends HTMLAttributes {
      'content'?: string;
      'items'?: string;
      'justify'?: string;
      'layout'?: string;
      'order'?: number;
      'wrap'?: string;
    }

    export interface MyComponentAttributes extends HTMLAttributes {
      'first'?: string;
      'last'?: string;
    }
  }

  interface HTMLElementTagNameMap {
    'arv-flex': HTMLArvFlexElement
    'my-component': HTMLMyComponentElement
  }

  interface ElementTagNameMap {
    'arv-flex': HTMLArvFlexElement;
    'my-component': HTMLMyComponentElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;